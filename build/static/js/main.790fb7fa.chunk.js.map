{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","xsrfCookieName","xsrfHeaderName","App","require","useState","nodes","setNodes","useEffect","get","then","response","data","catch","error","console","log","style","display","flexWrap","flexGrow","width","flexDirection","size","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAAe,I,6CCMfA,IAAMC,SAASC,eAAiB,YAChCF,IAAMC,SAASE,eAAiB,cAgCjBC,MA9Bf,WAEE,IAAMJ,EAAQK,EAAQ,GAFT,EAMaC,mBAAS,IANtB,mBAMNC,EANM,KAMCC,EAND,KAqBb,OAbAC,qBAAU,WACRT,EAAMU,IAAI,yBACTC,MAAK,SAAUC,GAEd,IAAIL,EAAQK,EAASC,KACnBL,EAASD,MAEZO,OAAM,SAAUC,GAEfC,QAAQC,IAAIF,SAKd,qBAAKG,MAAO,CAAEC,QAAS,OAAQC,SAAU,SAAUC,SAAU,GAA7D,SACE,qBAAKH,MAAO,CAAEI,MAAO,OAAQH,QAAS,OAAQI,cAAe,UAA7D,SACE,cAAC,IAAD,CAAMhB,MAAOA,EAAOiB,KAAK,OAAOC,MAAO,eCrBhCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.790fb7fa.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Tree from '@naisutech/react-tree';\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\n\naxios.defaults.xsrfCookieName = 'csrftoken'\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\n\nfunction App() {\n\n  const axios = require('axios');\n  var bands = null;\n  var albums = null;\n\n  const [nodes, setNodes] = useState([]);\n\n  useEffect(() => {\n    axios.get('api/albums-band-tree/')\n    .then(function (response) {\n      // handle success\n      let nodes = response.data;\n        setNodes(nodes);\n    })\n    .catch(function (error) {\n      // handle error\n      console.log(error);\n    })\n  });\n\n  return (\n    <div style={{ display: 'flex', flexWrap: 'nowrap', flexGrow: 1 }}>\n      <div style={{ width: '100%', display: 'flex', flexDirection: 'column' }}>\n        <Tree nodes={nodes} size=\"full\" theme={'light'} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}